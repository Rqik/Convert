{"version":3,"sources":["components/input/input.tsx","components/number/number.tsx","components/financeToday/financeToday.tsx","components/financeList/financeList.tsx","App.tsx","store/index.ts","index.tsx"],"names":["Input","Number","number","difference","priceChange","size","className","FinanceToday","Name","CharCode","Value","Previous","valueChange","Math","round","console","log","FinanceList","curs","itemList","Object","keys","map","el","App","useState","cbr","setCbr","a","axios","get","result","data","Valute","useEffect","fetchValute","defaultState","store","createStore","state","action","type","ReactDOM","render","document","getElementById"],"mappings":"gQAEMA,EAAY,WAChB,OAAO,2BCOHC,G,YAA0B,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,WAAWC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,KAEhE,OAAO,sBAAKC,UAAS,iBAAYF,GAAe,UAAUA,EAArC,gBAClBC,GAAQ,UAAUA,GADd,UAEJH,EACCC,GAAc,sBAAKG,UAAU,qBAAf,cAAsCH,UCJpDI,EAAsC,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAG/DC,EAA2BF,EAAQC,EAAW,YAAc,YAE5DR,EAAaU,KAAKC,MAAwB,KAAjBJ,EAAOC,IAAiB,IAErD,OADAI,QAAQC,IAAKN,EAAQC,GAEnB,sBAAKL,UAAU,UAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAf,SAAgCE,IAChC,qBAAKF,UAAU,wBAAf,SAAwCG,OAG1C,sBAAKH,UAAU,yBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAAQJ,OAAQQ,EAAOP,WAAYA,EAAYC,YAAaQ,IAC3D,qBAAKN,UAAU,mBAAf,oFAEH,sBAAKA,UAAU,oBAAf,UACE,cAAC,EAAD,CAAQJ,OAAQS,EAAUN,KAAK,eAC/B,qBAAKC,UAAU,mBAAf,+ECzBJW,G,MAAqC,SAAC,GAAe,IAAD,IAAbC,YAAa,MAAR,GAAQ,EAGlDC,EAAWC,OAAOC,KAAKH,GAAMI,KAAI,SAACC,GAEtC,OAAO,cAAC,EAAD,CAAqDf,KAAMU,EAAKK,GAAIf,KACtDC,SAAUS,EAAKK,GAAId,SACnBC,MAAOQ,EAAKK,GAAIb,MAChBC,SAAUO,EAAKK,GAAIZ,UAHdO,EAAKK,GAAIZ,SAASO,EAAKK,GAAIb,UAMvD,OACE,qBAAKJ,UAAU,eAAf,SAEGa,M,iBCaQK,MA1Bf,WAEE,MAAsBC,mBAAuB,IAA7C,mBAAOC,EAAP,KAAYC,EAAZ,KAFa,4CAQb,4BAAAC,EAAA,+EAEuBC,IAAMC,IAAN,8CAFvB,OAEQC,EAFR,OAGIJ,EAAOI,EAAOC,KAAKC,QAHvB,gDAKIlB,QAAQC,IAAR,MALJ,0DARa,sBAkBb,OAdAkB,qBAAU,YAJG,mCAKXC,KACC,IAaD,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CAAaY,KAAMQ,IACnB,cAAC,EAAD,Q,wBC3BAU,EAAe,GAYRC,EAAQC,aAPL,WAAgD,IAA/CC,EAA8C,uDAAtCH,EAAcI,EAAwB,uCAIzD,OAHIA,EAAOC,KAGJF,KCHbG,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,MAGJO,SAASC,eAAe,W","file":"static/js/main.4be8b1c5.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\n\r\nconst Input: FC = ()=>{\r\n  return <input/>\r\n}\r\n\r\nexport {Input}\r\n","import React, {FC} from 'react';\r\nimport './number.scss'\r\nexport type priceChange = 'increased' | 'decreased'\r\ntype size = 'font-big' | 'font-small'\r\ninterface NumberProps {\r\n  number : number | string,\r\n  difference?: number,\r\n  priceChange?: priceChange,\r\n  size?: size\r\n}\r\nconst Number: FC <NumberProps>= ({number, difference,priceChange, size })=>{\r\n\r\n  return <div className={`number ${priceChange && 'number_'+priceChange }\r\n   ${size && 'number_'+size }`}>\r\n    {number}\r\n    { difference && <div className=\"number__difference\"> {difference}</div>}\r\n  </div>\r\n}\r\n\r\nexport {Number}\r\n","import React, {FC} from 'react';\r\nimport './financeToday.scss'\r\nimport {Number, priceChange} from '../number/number';\r\n\r\nexport interface FinanceTodayProps {\r\n  Name: string,\r\n  CharCode: string,\r\n  Value: number,\r\n  Previous: number,\r\n}\r\n\r\nconst FinanceToday: FC<FinanceTodayProps> = ({Name, CharCode, Value, Previous}) => {\r\n\r\n\r\n  let valueChange: priceChange = Value < Previous ? 'decreased' : 'increased'\r\n  let previousChange: priceChange = Value > Previous ? 'decreased' : 'increased'\r\n  let difference = Math.round((Value- Previous)*10000)/10000\r\n  console.log( Value - Previous)\r\n  return (\r\n    <div className=\"finance\">\r\n      <div className=\"finance__currency\">\r\n        <div className=\"finance__name\">{Name}</div>\r\n        <div className=\"finance__abbreviation\">{CharCode}</div>\r\n      </div>\r\n\r\n      <div className=\"finance__current-value\">\r\n        <div className=\"finance__today\">\r\n          <Number number={Value} difference={difference} priceChange={valueChange}/>\r\n           <div className=\"finance__caption\">цена сегодня</div>\r\n        </div>\r\n        <div className=\"finance__tomorrow\">\r\n          <Number number={Previous} size=\"font-small\"/>\r\n          <div className=\"finance__caption\">цена вчера</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>)\r\n}\r\n\r\nexport {FinanceToday}\r\n","import React, {FC} from 'react';\r\nimport {Currency, CurrencyList} from '../../type/interface';\r\nimport {FinanceToday} from '../financeToday/financeToday';\r\nimport './financeList.scss'\r\ninterface FinanceListProps{\r\n  curs: CurrencyList\r\n}\r\nconst FinanceList: FC <FinanceListProps> = ({curs={}}) => {\r\n\r\n\r\n  const itemList = Object.keys(curs).map((el)=>{\r\n\r\n    return <FinanceToday key={curs[el].Previous*curs[el].Value} Name={curs[el].Name}\r\n                         CharCode={curs[el].CharCode}\r\n                         Value={curs[el].Value}\r\n                         Previous={curs[el].Previous}/>\r\n  })\r\n\r\n  return (\r\n    <div className=\"finance-list\">\r\n\r\n      {itemList}\r\n\r\n    </div>\r\n    // currency.map((el: string) => {\r\n    //   return <FinanceToday name={el.Name}\r\n    //                        abbreviation={el.CharCode}\r\n    //                        Value={el.Value}\r\n    //                        Previous={el.Previous}/>\r\n    //\r\n    // }\r\n    // )\r\n  )\r\n}\r\nexport {FinanceList}\r\n","import React, {useEffect, useState} from 'react';\nimport {Input} from './components/input/input';\nimport {FinanceTodayProps} from './components/financeToday/financeToday';\nimport {CurrencyList} from './type/interface';\nimport {FinanceList} from './components/financeList/financeList';\nimport axios from 'axios';\n\n\nfunction App() {\n\n  const [cbr, setCbr] = useState<CurrencyList>({})\n\n  useEffect(() => {\n    fetchValute()\n  }, [])\n\n  async function fetchValute() {\n    try {\n      let result = await axios.get(`https://www.cbr-xml-daily.ru/daily_json.js`)\n      setCbr(result.data.Valute)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n\n  return (\n    <div className=\"App\">\n      <FinanceList curs={cbr}/>\n      <Input/>\n    </div>\n  );\n}\n\nexport default App;\n","import {createStore} from 'redux';\r\n\r\nconst defaultState = {}\r\ntype mainAction = {\r\n  type  : string\r\n  payload : any\r\n}\r\nconst reducer = (state = defaultState, action : mainAction) => {\r\n  switch (action.type) {\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport const store = createStore(reducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport './styles/main.scss'\n\nimport {store} from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}