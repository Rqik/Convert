{"version":3,"sources":["components/NominalCard/NominalCard.tsx","components/FinanceList/FinanceList.tsx","hooks/useTypedSelector.ts","types/currency.ts","store/actionCreator/currencyAction.ts","pages/App/App.tsx","hooks/useAction.ts","store/reducers/currencyReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["NominalCard","Name","CharCode","Value","Previous","Nominal","useState","setRect","backGradRef","useRef","borderGradRef","React","useEffect","prev","current","getBoundingClientRect","difference","Math","round","className","onClick","e","console","log","onMouseMove","coords","centerX","width","left","centerY","height","top","rad","atan2","clientY","clientX","PI","style","borderImageSource","borderImage","onMouseLeave","ref","FinanceList","curs","itemList","Object","keys","map","el","CurrencyActionTypes","useTypeSelector","useSelector","fetchCurrency","dispatch","a","type","FETCH_CURRENCY","axios","get","response","FETCH_CURRENCY_SUCCESS","payload","data","Valute","FETCH_CURRENCY_ERROR","App","state","currency","error","loading","useDispatch","bindActionCreators","CurrencyActionCreator","useAction","initialState","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6e4172c.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { ReactElement, SyntheticEvent, useRef, useState } from 'react';\n\ninterface NominalCardTypes {\n  Name: string;\n  CharCode: string;\n  Value: number;\n  Previous: number;\n  Nominal: number;\n}\n\nfunction NominalCard({\n  Name,\n  CharCode,\n  Value,\n  Previous,\n  Nominal,\n}: NominalCardTypes): ReactElement {\n  const [rect, setRect] = useState<any>(0);\n\n  const backGradRef = useRef<HTMLDivElement>(null);\n  const borderGradRef = useRef<HTMLDivElement>(null);\n\n  React.useEffect((): void => {\n    setRect((prev: any): any => {\n      return backGradRef.current?.getBoundingClientRect();\n    });\n  }, []);\n\n  function handle(e: React.MouseEvent): void {\n    console.log('2123');\n  }\n\n  const handelMouseEvent = (e: React.MouseEvent<HTMLDivElement>): void => {\n    if (backGradRef.current && borderGradRef.current) {\n      const coords = backGradRef.current?.getBoundingClientRect();\n      const centerX = coords.width / 2 + coords.left;\n      const centerY = coords.height / 2 + coords.top;\n      const rad =\n        Math.atan2(e.clientY - centerY, e.clientX - centerX) - Math.PI / 2;\n\n      backGradRef.current.style.borderImageSource = `linear-gradient(${rad}rad,\n        rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, .2) 30%,rgba(255, 255, 255, 0)100%`;\n\n      borderGradRef.current.style.borderImage = `linear-gradient(${\n        rad - Math.PI\n      }rad, #fff -1.73%, rgba(255, 255, 255, 0) 31.92%)27`;\n    }\n  };\n\n  const removeStyles = (): void => {\n    if (backGradRef.current && borderGradRef.current) {\n      backGradRef.current.style.borderImageSource = '';\n      borderGradRef.current.style.borderImage = '';\n    }\n  };\n  const difference = Math.round((Value - Previous) * 10000) / 10000;\n  return (\n    <div\n      className=\"nominal-card\"\n      onClick={handle}\n      onMouseMove={handelMouseEvent}\n      onMouseLeave={removeStyles}\n    >\n      <div className=\"nominal-card__background\">\n        <div ref={backGradRef} className=\"nominal-card__fon\" />\n        <div className=\"nominal-card__blur\" />\n        <div className=\"nominal-card__noise\" />\n        <div ref={borderGradRef} className=\"nominal-card__gradient\" />\n        <div\n          className={`nominal-card__odds ${\n            difference >= 0 ? 'nominal-card__odds_increase' : ''\n          }`}\n        />\n      </div>\n      <div className=\"nominal-card__content\">\n        <div className=\"nominal-card__currency\">\n          <div className=\"nominal-card__name\">{Name}</div>\n          <div className=\"nominal-card__charcode\">\n            <span className=\"nominal-card__span\">\n              {`${Nominal} ${CharCode}`}\n            </span>\n            1 RUB\n          </div>\n        </div>\n        <div className=\"nominal-card__subordinate\">\n          <div className=\"nominal-card__today\">\n            <div className=\"nominal-card__difference\">{difference}</div>\n            <div className=\"nominal-card__value\">{Value}</div>\n            <div className=\"nominal-card__caption\">цена сегодня</div>\n          </div>\n          <div className=\"nominal-card__tomorrow\">\n            <div className=\"nominal-card__previous\">{Previous}</div>\n            <div className=\"nominal-card__caption\">цена вчера</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { NominalCard };\n","import React, { ReactElement } from 'react';\nimport { CurrencyList } from '../../types/currency';\nimport { FinanceToday } from '../FinanceToday';\nimport { NominalCard } from '../NominalCard';\n\ninterface FinanceListProps {\n  curs: CurrencyList;\n}\n\nfunction FinanceList({ curs }: FinanceListProps): ReactElement {\n  const itemList = Object.keys(curs).map((el) => {\n    return (\n      <NominalCard\n        key={curs[el].Previous * curs[el].Value}\n        Name={curs[el].Name}\n        CharCode={curs[el].CharCode}\n        Value={curs[el].Value}\n        Previous={curs[el].Previous}\n        Nominal={curs[el].Nominal}\n      />\n    );\n  });\n\n  /* <FinanceToday\n  key={curs[el].Previous * curs[el].Value}\n  Name={curs[el].Name}\n  CharCode={curs[el].CharCode}\n  Value={curs[el].Value}\n  Previous={curs[el].Previous}\n  Nominal={curs[el].Nominal}\n  /> */\n\n  return <div className=\"finance-list\">{itemList}</div>;\n}\nexport { FinanceList };\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\nimport { RootState } from '../store/reducers';\n\nexport const useTypeSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export interface Currency {\n  CharCode: string;\n  ID: string;\n  Name: string;\n  Nominal: number;\n  NumCode: string;\n  Previous: number;\n  Value: number;\n}\n\nexport interface CurrencyList {\n  [key: string]: Currency;\n}\n\nexport interface CurrencyState {\n  error: null | string;\n  loading: boolean;\n  currency: CurrencyList;\n}\n\nexport enum CurrencyActionTypes {\n  FETCH_CURRENCY = 'FETCH_CURRENCY',\n  FETCH_CURRENCY_SUCCESS = 'FETCH_CURRENCY_SUCCESS',\n  FETCH_CURRENCY_ERROR = 'FETCH_CURRENCY_ERROR',\n}\n\ninterface FetchCurrencyAction {\n  type: CurrencyActionTypes.FETCH_CURRENCY;\n}\n\ninterface FetchCurrencySuccessAction {\n  type: CurrencyActionTypes.FETCH_CURRENCY_SUCCESS;\n  payload: any;\n}\n\ninterface FetchCurrencyErrorAction {\n  type: CurrencyActionTypes.FETCH_CURRENCY_ERROR;\n  payload: string;\n}\n\nexport type CurrencyAction =\n  | FetchCurrencyAction\n  | FetchCurrencyErrorAction\n  | FetchCurrencySuccessAction;\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport { CurrencyAction, CurrencyActionTypes } from '../../types/currency';\n\nexport const fetchCurrency =\n  () => async (dispatch: Dispatch<CurrencyAction>) => {\n    try {\n      dispatch({ type: CurrencyActionTypes.FETCH_CURRENCY });\n      const response = await axios.get(\n        'https://www.cbr-xml-daily.ru/daily_json.js',\n      );\n      dispatch({\n        type: CurrencyActionTypes.FETCH_CURRENCY_SUCCESS,\n        payload: response.data.Valute,\n      });\n    } catch (e) {\n      dispatch({\n        type: CurrencyActionTypes.FETCH_CURRENCY_ERROR,\n        payload: 'Произошла ошибка',\n      });\n    }\n  };\n","import React, { useEffect } from 'react';\nimport { Input } from '../../components/Input';\nimport { FinanceList } from '../../components/FinanceList';\nimport { useTypeSelector } from '../../hooks/useTypedSelector';\nimport { useAction } from '../../hooks/useAction';\n\nfunction App(): React.ReactElement {\n  const { currency, error, loading } = useTypeSelector(\n    (state) => state.currency,\n  );\n\n  const { fetchCurrency } = useAction();\n\n  function fuc(el: any): void {\n    console.log(el);\n  }\n\n  useEffect(() => {\n    fetchCurrency();\n    fuc(currency);\n  }, []);\n\n  if (loading) {\n    return <div>Идет загрузка</div>;\n  }\n\n  if (error) {\n    return (\n      <h1>\n        Упс произошла ошибка\n        {error}\n      </h1>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <FinanceList curs={currency} />\n    </div>\n  );\n}\n\nexport { App };\n","import { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as CurrencyActionCreator from '../store/actionCreator/currencyAction';\n\nexport const useAction = (): any => {\n  const dispatch = useDispatch();\n  return bindActionCreators(CurrencyActionCreator, dispatch);\n};\n","import {\n  CurrencyAction,\n  CurrencyActionTypes,\n  CurrencyState,\n} from '../../types/currency';\n\nconst initialState: CurrencyState = {\n  error: null,\n  currency: {},\n  loading: false,\n};\n\nexport const currencyReducer = (\n  state = initialState,\n  action: CurrencyAction,\n): CurrencyState => {\n  switch (action.type) {\n    case CurrencyActionTypes.FETCH_CURRENCY:\n      return { loading: true, error: null, currency: {} };\n    case CurrencyActionTypes.FETCH_CURRENCY_SUCCESS:\n      return { loading: false, error: null, currency: action.payload };\n    case CurrencyActionTypes.FETCH_CURRENCY_ERROR:\n      return { loading: false, error: action.payload, currency: {} };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { currencyReducer } from './currencyReducer';\n\nexport const rootReducer = combineReducers({\n  currency: currencyReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './pages/App';\nimport './styles/main.scss';\n\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}